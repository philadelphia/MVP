apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.2"

//    javaCompileOptions {
//        annotationProcessorOptions {
//            includeCompileClasspath = true
//        }
//    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    defaultConfig {
        applicationId "com.meiliwu.installer"
        minSdkVersion 16
        targetSdkVersion 26
        multiDexEnabled true
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //签名
    signingConfigs {
        debug {
//            storeFile file("～/.android/debug.keystore")
        }

        release {
            storeFile file("eallcn_chow.jks")
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }


    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            applicationIdSuffix ".release"
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            applicationVariants.all { variant ->
//                appendVersionNameVersionCode(variant, defaultConfig)
//            }
        }
    }
}


def appendVersionNameVersionCode(variant, defaultConfig) {
    variant.outputs.each { output ->
        if (output.zipAlign) {
            def file = output.outputFile
            def fileName = file.name.replace(".apk", "_" + defaultConfig.versionName + ".apk").replaceFirst("app", "meiliwuInstaller").replace("-", "_")
            output.outputFileName = fileName
        } else {
            def file = output.outputFileName
            def fileName = file.replace(".apk", "_" + defaultConfig.versionName + ".apk").replaceFirst("app", "meiliwuInstaller").replace("-", "_")
            output.outputFileName = fileName
        }

    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    /*glide*/
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    /*gson*/
    implementation 'com.google.code.gson:gson:2.8.1'

    compileOnly "com.google.auto.value:auto-value:1.5"
    annotationProcessor "com.google.auto.value:auto-value:1.5"

    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit-converters:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit-adapters:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'io.reactivex:rxjava:1.3.6'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.9.3@aar'

    implementation 'com.zhy:autolayout:1.4.5'
}
